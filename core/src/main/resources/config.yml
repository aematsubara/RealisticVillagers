# NOTE: Some options will take effect after the entities are unloaded and loaded back to the world.
# It is recommended to restart the server for the changes to take effect (don't be lazy :P).
#
# NOTES:
# 1 second = 20 ticks
# Chances range from 0.0 to 1.0.
#
# ITEM FORMAT:
# @url: the URL of the texture to be used (@material should be PLAYER_HEAD).
# @material: the material of the item.
# @model-data: the custom model data id, used for custom resource packs.
# @display_name & lore: self-explanatory.
# @crafting.shaped: whether the item recipe is shaped (like WORKBENCH) or not (like FLINT_AND_STEEL).
# @crafting.ingredients: the ingredients that'll be used for the recipe. Format: MATERIAL_NAME, KEY (used for shape, see below).
# @crafting.shape: the shape that'll be used on the crafting table, using the KEY specified (only 3 lines required, spaces are used as AIR).
# @flags: which attributes to hide.
# @enchantments: the enchantments to be applied.
# @leather-color: the color of the leather armor.
# * Use a color from: https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/Color.html (e.g. AQUA, BLACK, etc.)
# * Use a random color with: $RANDOM
# * Use a color using RGB format: &#RRGGBB
# @damage: the amount of damage to apply to the item (maximum durability - given damage, can be $RANDOM or X-Y).
# @tipped: the potion effect the arrow will have (must be a TIPPED_ARROW).
# @amount: the amount of items.
#
# FOR FIREWORKS:
# @firework.power: the approximate power of the firework. Each level of power is half a second of flight time (from 0 to 127).
# firework-effects: a list of effects.
# firework-effects.x.type: the type or shape of the effect.
# firework-effects.x.flicker: whether the firework effect should flicker.
# firework-effects.x.trail: whether the firework effect should have a trail.
# firework-effects.x.colors: several primary colors to the firework effect.
# firework-effects.x.fade-colors: several fade colors to the firework effect.
# NOTE: More firework effects (firework stars) = more damage.
#
# $RANDOM:
# Color: a random color. (@leather-color / @firework.firework-effects.x.colors/fade-colors)
# PotionType: a random potion effect. (@tipped)
# FireworkEffect.Type: a random type or shape. (@firework.firework-effects.x.type)
# For @damage, a random value between 1 and max item durability is used.
#
# RANGED AMOUNT (X-Y): A random value between x and y. (@amount / @enchantments (level) / @firework.power)
#
# PERCENTAGE (only valid for @damage, NOT DECIMAL): X% / %X (% must be included); for example: 50% (same as %50) would be half-damage.
# NOTE: The percentage is taken from the maximum durability; this means:
# * WOODEN_SWORD max durability = 60; if @damage is 50% (60 * 0.50) -> 30. if @damage is 25% (60 * 0.25) -> 15.
# That value will be the damage added to the item; so, if @damage is %25, the new durability of the WOODEN_SWORD will be 60 - 15 = 45.
#
# In this example, the required ingredients are 7 of GOLD_INGOT and 1 of DIAMOND.
# You can use spaces to represent AIR (nothing).
# ingredients:
#   - DIAMOND, D
#   - GOLD_INGOT, G
# shape:
#   - "GDG"
#   - "G G"
#   - "GGG"
#
# USEFUL LINKS:
#
# Materials: https://hub.spigotmc.org/javadocs/spigot/org/bukkit/Material.html
# Flags: https://hub.spigotmc.org/javadocs/spigot/org/bukkit/inventory/ItemFlag.html
# Professions: https://hub.spigotmc.org/javadocs/spigot/org/bukkit/entity/Villager.Profession.html
# Enchantments: https://www.digminecraft.com/lists/enchantment_list_pc.php
# Colors: https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/Color.html
# FireworkEffect.Type: https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/FireworkEffect.Type.html
# Effects: https://www.digminecraft.com/lists/effect_list_pc.php

# Don't touch this!
config-version: 2

# In order to generate skins faster, you will need to create your own api-key on the mineskin page.
# NOTE: If empty, no api-key will be used, so it'll take longer to generate skins (NOT RECOMMENDED).
# NOTE 2: DON'T login with your microsoft account, this is to contribute with a minecraft account to make the requests faster.
# NOTE 3: You should only login with your google account. If you have problems, try clearing your cookies and try the steps again.
#
# To create an api-key, follow the steps below:
# * Go to https://mineskin.org/account first.
# * You must have a Google account, then click on "Continue as X".
# * A secure connection check will be performed by cloudflare, just wait.
# * If the page just keeps refreshing, go to https://mineskin.org/ and then do the next step, you should already be logged in.
# * Once you've logged in, go to https://mineskin.org/account again.
# * Under "API Keys" click on "Manage api keys".
# * In "Action", select "Create a new API Key".
# * Now, you only have to define the name of the api-key, you can give it any name you want.
# * Scroll down and click on the "Create" button.
# * That's it, now, you just have to save the name, the api-key and the key-secret, so you don't lose it.
# * Paste the api-key down here and do /rv reload.
mineskin-api-key: ""

# If you only want villagers to look like players, spawn with weapons and attack, you can disable all interactions.
disable-interactions: false

# The maximum amount of gossip a villager shares with another villager.
max-gossip-topics: 10

# These are set based on the player's reputation and if the player is the hero of the village.
disable-special-prices: false

# If a player has a monster head equipped, the villager will attack him.
# Heads: DRAGON_HEAD / WITHER_SKELETON_SKULL / ZOMBIE_HEAD / SKELETON_SKULL / CREEPER_HEAD
attack-player-wearing-monster-skull: true

# If a player plays the goat horn "seek" (same sound as in raids), the villager will attack him (1.19+).
attack-player-playing-goat-horn-seek: true

# The distance at which villagers can hear the goat horn (1.19+).
goat-horn-seek-range: 32

# If the villager must defend a family member (only if the villager has a weapon).
villager-defend-family-member: true

# If the villager must defend the hero of the village (only if the villager has a weapon).
# NOTE: A player is considered the hero of the village if he has the effect HERO_OF_THE_VILLAGE or
# if he has killed at least one raider and will receive this effect if the defense is successful.
villager-defend-hero-of-the-village: true

# If the villager must defend the following player (only if the villager has a weapon).
villager-defend-following-player: true

# If true, arrows shot by villagers will pass through other villagers.
# NOTE: This should always be true to prevent them from killing each other by accident.
arrows-pass-through-other-villagers: true

# Whether it's allowed to pick arrows shot by villagers (DISALLOWED/ALLOWED/CREATIVE_ONLY).
arrow-status: ALLOWED

# The waiting time between melee attacks (in ticks).
melee-attack-cooldown: 10

# Whether villagers can fix iron golems if they have iron ingot(s) in hand.
villager-fix-iron-golem-with-iron: true

# The waiting time to fix a golem again (in ticks). Use 0 or lower to set no limit.
villager-fix-iron-golem-cooldown: 600

# Whether villagers can help family members (only players ATM).
villager-help-family: true

# The waiting time to help a family member again (in ticks). Use 0 or lower to set no limit.
villager-help-family-cooldown: 600

# Whether villagers can spawn iron golems when needed.
# NOTE: True by default, but should be considered since villagers can defend themselves.
villager-spawn-iron-golem: true

# If a player hits a villager (accidentally or not) during a raid, the villager will defend himself.
# NOTE: If false, the reputation towards the player will not be reduced; however, if the villager dies,
# it will lower the reputation with nearby villagers.
villager-attack-player-during-raid: false

# If a player hits an iron golem (accidentally or not) during a raid, the golem will defend himself.
iron-golem-attack-player-during-raid: false

# Reputation required to marry a villager.
reputation-required-to-marry: 75

# Reputation required to procreate with a villager.
reputation-required-to-procreate: 110

# The reputation that will be lost after divorce.  Minimum value: 2; use 1 or less to disable.
divorce-reputation-loss: 150

# The reputation that will be lost after divorce with divorce papers (given by clerics).  Minimum value: 2; use 1 or less to disable.
divorce-reputation-loss-papers: 10

# Variables:
# %sex% - the sex of the newborn baby.
input-gui:
  combat-search:
    title: "Search..."
    text: "Search..."
  baby:
    title: "I'ts a %sex%!"
    text: "Name..."
    invalid-name: "Invalid name!"
  whistle-search:
    title: "Search..."
    text: "Search..."
  skin-search:
    title: "Search..."
    text: "Search..."
  new-skin:
    title: "Which player?"
    text: "Write..."

# This only applies to villagers who have not yet spawned.
# If the villager has no weapon in hand, he will flee from danger.
# NOTE: Only monsters are supported at the moment (ENDER_DRAGON & WITHER included).
# Monsters: https://minecraft.wiki/w/Mob#Hostile_mobs
default-target-entities:
  - DROWNED
  - EVOKER
  - HUSK
  - ILLUSIONER
  - PILLAGER
  - RAVAGER
  - VEX
  - VINDICATOR
  - ZOGLIN
  - ZOMBIE
  - ZOMBIE_VILLAGER
  - WARDEN

# The distance at which villagers detect hostile entities (double is used for villagers with weapons).
hostile-detection-range: 15.0

# If you want the villager to become a zombie when killed by one.
# When healed, the villager will have all his data.
zombie-infection: true

# Whether villagers should be turned into witches by being struck by lightning.
witch-convertion: true

# Whether villagers should be turned into witches by being struck by lightning from a trident with channeling thrown by a villager.
# NOTE: @witch-convertion must be true.
witch-convertion-from-villager-trident: false

# The maximum amount of health of a villager.
villager-max-health: 20

# Whether to teleport the villager to the player he's following if the distance between them is greater than X (defined below).
teleport-when-following-if-far-away: true

# If the distance between the two is greater than the given value, the villager will be teleported.
teleport-when-following-distance: 12

# The time (in ticks) that the villager waits for a gift (or a bed) from a player.
time-to-expect: 100

# Whether villagers should drop the contents of the inventory upon death.
# NOTE: Not recommended to avoid players recovering their items after giving them to the villager
# to increase reputation and abuse trade discounts.
drop-whole-inventory: false

# The time it will take for a baby to grow (in milliseconds).
baby-grow-cooldown: 1200000

# The time a villager must wait before being able to procreate again (in milliseconds).
procreation-cooldown: 1200000

# On Halloween, there's a chance that a villager will wear a pumpkin / carved pumpkin.
chance-of-wearing-halloween-mask: 0.25

# If the player's reputation is less than X, the villager will be automatically divorced.
divorce-if-reputation-is-less-than: 0

# Size of the inventory of a villager.
# Maximum size allowed: 36.
villager-inventory-size: 27

# If false, sounds will be replaced to the ones from player (if possible).
use-villager-sounds: false

# Amount of reputation when giving a wedding ring. Minimum value: 2; use 1 or less to disable.
wedding-ring-reputation: 20

# Amount of reputation when giving a cross. Minimum value: 2; use 1 or less to disable.
cross-reputation: 10

# Amount of reputation when having a baby.  Minimum value: 2; use 1 or less to disable.
baby-reputation: 20

# If jokes are always funny to the partner.
partner-joke-always-success: false

# Chance of success when interacting with a villager.
chance-of-chat-interaction-success: 0.65

# Amount of reputation for an interaction (successful or not). Minimum value: 2; use 1 or less to disable.
chat-interact-reputation: 2

# The waiting time between each interaction (in seconds).
# NOTE: @greet & @proud-of are always success, so consider putting a reasonable amount of cooldown.
# NOTE #2: for @gift, the cooldown starts after the villager picks up the gift.
interact-cooldown:
  chat: 2
  greet: 60
  story: 2
  joke: 2
  flirt: 2
  proud-of: 60
  insult: 2
  divorce-papers: 900
  gift: 5
  bed: 5

# Whether to display the title in the villager's chat messages.
# For example: James the Armorer / Juliet the Weaponsmith / etc.
show-title-in-villager-chat-message: true

# The article in the title name of the villager.
villager-title-article: "the"

# The format of the chat when a villager speaks.
villager-message-format: "%name%: %message%"

# Texts that are used in some variables.
variable-text:
  acronym:
    second: "s"
    minute: "m"
    hour: "h"
    day: "d"
  dead: "†"
  infinite: "∞"
  none: "None"
  unknown: "Unknown"
  villager: "Villager"
  player: "Player"
  console: "Console"
  no-partners: "No partners(s)"
  no-partner-currently: "Currently unmarried"
  no-childrens: "No childrens"
  no-effects: "No effects"
  kid: "Kid"
  adult: "Adult"
  boy: "Boy"
  girl: "Girl"
  sex:
    male: "Male"
    female: "Female"
  type:
    desert: "Desert"
    jungle: "Jungle"
    plains: "Plains"
    savanna: "Savanna"
    snow: "Snow"
    swamp: "Swamp"
    taiga: "Taiga"
  profession:
    none: "None"
    armorer: "Armorer"
    butcher: "Butcher"
    cartographer: "Cartographer"
    cleric: "Cleric"
    farmer: "Farmer"
    fisherman: "Fisherman"
    fletcher: "Fletcher"
    leatherworker: "Leatherworker"
    librarian: "Librarian"
    mason: "Mason"
    nitwit: "Nitwit"
    shepherd: "Shepherd"
    toolsmith: "Toolsmith"
    weaponsmith: "Weaponsmith"
  activity:
    play: "Play"
    work: "Work"
    core: "Core"
    meet: "Meet"
    rest: "Rest"
    idle: "Idle"
    panic: "Panic"
    pre_raid: "Pre-Raid"
    raid: "Raid"
    hide: "Hide"
    fight: "Fight"
    stay: "Stay"
  entity:
    zombie: "Zombie"
    skeleton: "Skeleton"
    creeper: "Creeper"
    witch: "Witch"
    spider: "Spider"
    zombie_villager: "Zombie Villager"
    enderman: "Enderman"
    slime: "Slime"
    cave_spider: "Cave Spider"
    silverfish: "Silverfish"
    stray: "Stray"
    husk: "Husk"
    phantom: "Phantom"
    drowned: "Drowned"
    vindicator: "Vindicator"
    vex: "Vex"
    illusioner: "Illusioner"
    evoker: "Evoker"
    ravager: "Ravager"
    guardian: "Guardian"
    elder_guardian: "Elder Guardian"
    blaze: "Blaze"
    ghast: "Ghast"
    magma_cube: "Magma Cube"
    wither_skeleton: "Wither Skeleton"
    hoglin: "Hoglin"
    zoglin: "Zoglin"
    piglin: "Piglin"
    piglin_brute: "Piglin Brute"
    zombified_piglin: "Zombified Piglin"
    endermite: "Endermite"
    shulker: "Shulker"
    wither: "Wither"
    ender_dragon: "Ender Dragon"
    warden: "Warden"
  potion-effect-type:
    speed: "Speed"
    slowness: "Slowness"
    haste: "Haste"
    mining-fatigue: "Mining Fatigue"
    strength: "Strength"
    instant-health: "Instant Health"
    instant-damage: "Instant Damage"
    jump-boost: "Jump Boost"
    nausea: "Nausea"
    regeneration: "Regeneration"
    resistance: "Resistance"
    fire-resistance: "Fire Resistance"
    water-breathing: "Water Breathing"
    invisibility: "Invisibility"
    blindness: "Blindness"
    night-vision: "Night Vision"
    hunger: "Hunger"
    weakness: "Weakness"
    poison: "Poison"
    wither: "Wither"
    health-boost: "Health Boost"
    absorption: "Absorption"
    saturation: "Saturation"
    glowing: "Glowing"
    levitation: "Levitation"
    luck: "Luck"
    unluck: "Unluck"
    slow-falling: "Slow Falling"
    conduit-power: "Conduit Power"
    dolphins-grace: "Dolphins Grace"
    bad-omen: "Bad Omen"
    hero-of-the-village: "Hero Of The Village"
    darkness: "Darkness"

# Here you can modify the available GUIs.
#
# Global title variables:
# %villager-name% - name of the villager (if a particular villager is involved).
# %page% - current page (only for @combat/whistle.title).
# %max-page% - amount of pages (only for @combat/whistle.title).
# %sex% - the sex of the skin that'll be generated (only for @skins/new-skin.title).
# %age-stage% the age stage of the skin that'll be generated (only for @skins/new-skin.title).
#
# NOTE: For the "main" inventory it's possible to choose the slot in which the item'll be positioned,
# with the following format: slot: x, y; starting from the top left; being 1, 1.
#
# if this seems difficult for you, you can assign the slot of the inventory directly,
# take a look at https://wiki.vg/Inventory#Large_chest.
# For example: if you got a 6x9 chest, and you want to put an item on x = 1, y = 6, you'll need to use: slot: 45.
#
# All valid slots: https://filoghost.me/data/chest-commands/coordinates-table.png (credits to @filoghost)
gui:
  # Rainbow animation is applied to all GUI's.
  rainbow-animation:
    enabled: false
    # The type of animation.
    # 1 = All frames are changed to a random color.
    # 2 = Each frame is changed to a different color.
    type: 1
    # Animation speed (in ticks).
    delay: 10
  main:
    # The size of this inventory. Must be a multiple of 9; minimum 27, maximum 54.
    size: 45
    # %reputation% - player reputation with this villager (only for @main).
    title: "%villager-name% (rep. %reputation%)"
    frame:
      enabled: true
      material: GRAY_STAINED_GLASS_PANE
      display-name: "&7"
    items:
      chat:
        slot: 2, 2
        material: PAPER
        display-name: "&aChat"
        lore:
          - "&7Click to chat with this villager."
      greet:
        slot: 3, 2
        material: PAPER
        display-name: "&aGreet"
        lore:
          - "&7Click to greet this villager."
      story:
        slot: 4, 2
        material: PAPER
        display-name: "&aStory"
        lore:
          - "&7Click to tell a story to this villager."
      joke:
        slot: 5, 2
        material: PAPER
        display-name: "&aJoke"
        lore:
          - "&7Click to tell a joke to this villager."
      insult:
        slot: 6, 2
        material: PAPER
        display-name: "&aInsult"
        lore:
          - "&7Click to insult this villager."
      flirt:
        slot: 7, 2
        material: PAPER
        display-name: "&aFlirt"
        lore:
          - "&7Click to flirt with this villager."
      proud-of:
        slot: 8, 2
        material: PAPER
        display-name: "&aBe proud of"
        lore:
          - "&7Click to be proud of this villager"
      follow-me:
        slot: 2, 3
        material: SADDLE
        display-name: "&aFollow me"
        lore:
          - "&7Click to ask this villager to follow you."
      stay-here:
        slot: 3, 3
        material: LEAD
        display-name: "&aStay here"
        lore:
          - "&7Click to ask this villager to stay here."
      inspect-inventory:
        slot: 4, 3
        material: CHEST
        display-name: "&aInspect inventory"
        lore:
          - "&7Click to see the inventory of this villager."
      gift:
        slot: 5, 3
        url: 5726d9d0632e40bda5bcf65839ba2cc98a87bd619c53adf00310d6fc71f042b5
        material: PLAYER_HEAD
        display-name: "&aGift"
        lore:
          - "&7Click to give a gift to this villager."
      information:
        slot: 6, 3
        material: KNOWLEDGE_BOOK
        display-name: "&aVillager information"
        # %villager-name% - name of the villager.
        # %id% - unique ID of the villager.
        # %skin-id% - the id of the skin the villager is using.
        # %experience% - the current villager's experience.
        # %max-experience% - the experience that the villager must have to level up.
        # %sex% - sex of the villager (MALE/FEMALE).
        # %age-stage% - age stage of the villager (KID/DULT).
        # %health% - current health of the villager (including absorption amount).
        # %max-health% - maximum amount of health of the villager.
        # %type% - biome of the villager.
        # %profession% - profession of the villager.
        # %level% - level of the villager.
        # %activity% - the activity that this villager is performing (if any).
        # %current-partner% - current partner of this villager (if any).
        # %partners% - partners of this villager (one line).
        # %partner% - partners of this villager (displayed one below the other).
        # %father% - father of this villager.
        # %mother% - mother of this villager.
        # %childrens% - childrens of this villager (one line).
        # %children% - childrens of this villager (displayed one below the other).
        # %effect% - active potion effects.
        # %reputation% - player reputation with this villager.
        lore:
          - "&7Name: &e%villager-name%"
          - "&7ID: &e%id%"
          - "&7Skin ID: &e%skin-id%"
          - "&7Reputation: &e%reputation%"
          - "&7Sex: &e%sex%"
          - "&7Age stage: &e%age-stage%"
          - "&7Health: &e%health%&7/&e%max-health%"
          - "&7Food level: &e%food-level%&7/&e%max-food-level%"
          - "&7Type: &e%type%"
          - "&7Profession: &e%profession% (lvl. %level%)"
          - "&7Experience: &e%experience%&7/&e%max-experience%"
          - "&7Activity (non-core): &e%activity%"
          - "&7Partner(s):"
          - "&8* &e%partner%"
          - "&7Father: &e%father%"
          - "&7Mother: &e%mother%"
          - "&7Childrens:"
          - "&8* &e%children%"
          - "&7Effects:"
          - "&8* &e%effect%"
      trade:
        slot: 7, 3
        material: EMERALD
        display-name: "&aTrade"
        lore:
          - "&7Click to start trading with this villager."
      no-trades:
        slot: 7, 3
        material: BARRIER
        display-name: "&cEmpty trades"
        lore:
          - "&7This villager has nothing to trade."
      divorce:
        slot: 8, 3
        material: WRITABLE_BOOK
        display-name: "&cDivorce"
        lore:
          - "&7Divorce this villager."
        only-if-married: false
      divorce-papers:
        slot: 8, 3
        material: FILLED_MAP
        display-name: "&aDivorce papers"
        lore:
          - "&7Ask for divorce papers."
      set-home:
        slot: 2, 4
        material: RED_BED
        display-name: "&aSet home"
        lore:
          - "&7Give this villager a bed."
        only-if-allowed: false
      procreate:
        slot: 3, 4
        material: EGG
        display-name: "&aProcreate"
        lore:
          - "&7Click to start procreating."
        only-if-married: false
      combat:
        slot: 4, 4
        material: STONE_SWORD
        display-name: "&cCombat"
        lore:
          - "&7Click to manage combat of this villager."
        flags:
          - HIDE_ATTRIBUTES
        only-if-allowed: false
  equipment:
    title: "%villager-name%'s inventory"
    items:
      villager:
        url: SELF
        material: PLAYER_HEAD
        display-name: "&a%villager-name%"
      close:
        material: BARRIER
        display-name: "&cClose"
        lore:
          - "&7Click to close this inventory."
  combat:
    title: "Targets (%page%/%max-page%)"
    items:
      enabled:
        material: LIME_DYE
        display-name: "&aEnabled"
      disabled:
        material: GRAY_DYE
        display-name: "&cDisabled"
      entity:
        material: PLAYER_HEAD
        # *** The ones listed below are only applicable for @display-name. ***
        # %entity-type% - the entity type (name).
        display-name: "&a%entity-type%"
      previous:
        url: bd69e06e5dadfd84e5f3d1c21063f2553b2fa945ee1d4d7152fdc5425bc12a9
        material: PLAYER_HEAD
        display-name: "&aPrevious"
        lore:
          - "&7Click to go to the previous page."
      search:
        material: COMPASS
        display-name: "&9Search"
        lore:
          - "&7Click to search for a specific entity."
      clear-search:
        material: COMPASS
        # %keyword% - the current word used as a filter.
        display-name: "&cClear search: &8&o%keyword%"
        lore:
          - "&7Click to clear the browser!"
      close:
        material: BARRIER
        display-name: "&cClose"
        lore:
          - "&7Click to close this inventory."
      next:
        url: 19bf3292e126a105b54eba713aa1b152d541a1d8938829c56364d178ed22bf
        material: PLAYER_HEAD
        display-name: "&aNext"
        lore:
          - "&7Click to go to the next page."
  whistle:
    # The size of this inventory. Must be a multiple of 9; minimum 36, maximum 54.
    size: 36
    title: "Family (%page%/%max-page%)"
    items:
      close:
        material: BARRIER
        display-name: "&cClose"
        lore:
          - "&7Click to close this inventory."
      previous:
        url: bd69e06e5dadfd84e5f3d1c21063f2553b2fa945ee1d4d7152fdc5425bc12a9
        material: PLAYER_HEAD
        display-name: "&aPrevious"
        lore:
          - "&7Click to go to the previous page."
      next:
        url: 19bf3292e126a105b54eba713aa1b152d541a1d8938829c56364d178ed22bf
        material: PLAYER_HEAD
        display-name: "&aNext"
        lore:
          - "&7Click to go to the next page."
      search:
        material: COMPASS
        display-name: "&9Search"
        lore:
          - "&7Click to search for a specific villager."
      clear-search:
        material: COMPASS
        # %keyword% - the current word used as a filter.
        display-name: "&cClear search: &8&o%keyword%"
        lore:
          - "&7Click to clear the browser!"
      villager:
        material: PLAYER_HEAD
        # %villager-name% - name of the villager.
        display-name: "&a%villager-name%"
        lore:
          - "&7Click to summon this villager."
  skin:
    # The size of this inventory. Must be a multiple of 9; minimum 36, maximum 54.
    size: 54
    title: "Skins: %sex%/%age-stage% (%page%/%max-page%)"
    items:
      close:
        material: BARRIER
        display-name: "&cClose"
        lore:
          - "&7Click to close this inventory."
      previous:
        url: bd69e06e5dadfd84e5f3d1c21063f2553b2fa945ee1d4d7152fdc5425bc12a9
        material: PLAYER_HEAD
        display-name: "&aPrevious"
        lore:
          - "&7Click to go to the previous page."
      next:
        url: 19bf3292e126a105b54eba713aa1b152d541a1d8938829c56364d178ed22bf
        material: PLAYER_HEAD
        display-name: "&aNext"
        lore:
          - "&7Click to go to the next page."
      search:
        material: COMPASS
        display-name: "&9Search"
        lore:
          - "&7Click to search for a specific skin."
      clear-search:
        material: COMPASS
        # %keyword% - the current word used as a filter.
        display-name: "&cClear search: &8&o%keyword%"
        lore:
          - "&7Click to clear the browser!"
      male:
        url: e7fe6e2316ca384e0c85261b14fc066e231d6127e540dfeddb8b54d911b82831
        material: PLAYER_HEAD
        display-name: "&aSex: &bMale"
        lore:
          - "&7Click to toggle sex!"
      female:
        url: f6aac8c1c290be9d3bd495476aca42c68623b9cbefdd6ddbd6144855b9731c63
        material: PLAYER_HEAD
        display-name: "&aSex: &dFemale"
        lore:
          - "&7Click to toggle sex!"
      adult:
        material: WATER_BUCKET
        display-name: "&aAdult"
        lore:
          - "&7Click to toggle age stage!"
      kid:
        material: BUCKET
        display-name: "&aKid"
        lore:
          - "&7Click to toggle age stage!"
      add-new-skin:
        url: 3edd20be93520949e6ce789dc4f43efaeb28c717ee6bfcbbe02780142f716
        material: PLAYER_HEAD
        display-name: "&bNew skin (BETA)"
        lore:
          - "&7Click to add a new skin!"
      clear-skin:
        material: PLAYER_HEAD
        display-name: "&cClear skin"
        lore:
          - "&7Click to go back to your original skin!"
      profession:
        # %profession% - the name of the current profession.
        display-name: "&a%profession%"
        lore:
          - "&7Click to toggle profession (left or right)!"
      skin:
        # %skin-id% - the id of the current skin.
        display-name: "&a#%skin-id%"
        # %added-by% - the player (or console) that added the skin.
        # %when% - when was this skin added.
        # %generated% - how many professions overlays were generated.
        # %max-professions% - max amount of professions.
        # %profession% - professions and their state (either added (GREEN) or not (RED), displayed one below the other).
        lore:
          - "&7Added by: &e%added-by%"
          - "&7When: &e%when%"
          - "&7"
          - "&7Variants: &e%generated%&7/&e%max-professions%"
          - "&8* %profession%"
          - "&7"
          - "&7Left click to preview this skin on yourself!"
          - "&6Middle click to select kid skins!"
          - "&cRight click to delete this skin!"
  new-skin:
    title: "New skin: %sex%/%age-stage%"
    items:
      from-player:
        url: 185d9c3fbb63e8e8f1d3f250c1a8b408412ca82e9966b53b33159e766c1278b7
        material: PLAYER_HEAD
        display-name: "&aFrom a player"
        lore:
          - "&7Add a new skin from a player texture!"
      from-console:
        url: dcafbac5068197fda18636dfc4ce7f9df5af9b2a06e6f91e38ae35e4c435b2df
        material: PLAYER_HEAD
        display-name: "&aFrom console"
        lore:
          - "&7Add a new skin using texture values!"
          - "&7To do this, you need to use the next command"
          - "&7in console: &b/rv add-skin <sex> <texture> <signature>"


# Here you can modify the items of the babies.
#
# Variables:
# %villager-name% - the name of the newborn baby (display-name).
# If you are using a texture-pack, you can assign the item a @model-data so that the package will recognize it.
baby:
  boy:
    material: PAPER
    display-name: "&b%villager-name%"
    lore:
      - "&7Right click to spawn this little boy!"
  girl:
    material: PAPER
    display-name: "&d%villager-name%"
    lore:
      - "&7Right click to spawn this little girl!"

# Wedding ring crafting recipe.
wedding-ring:
  url: 93af4b73349e723b8654b75f905bd38995ccbb1a434d470b06279678945ecbdb
  material: PLAYER_HEAD
  display-name: "&aWedding ring"
  lore:
    - "&7Give it to the love of your life."
  crafting:
    shaped: true
    ingredients:
      - DIAMOND, D
      - GOLD_INGOT, G
    shape:
      - "GDG"
      - "G G"
      - "GGG"

# Whistle item.
whistle:
  material: IRON_INGOT
  display-name: "&bWhistle"
  lore:
    - "&7Use it to summon members of your family."
  crafting:
    shaped: true
    ingredients:
      - IRON_INGOT, I
      - GOLD_BLOCK, G
    shape:
      - "   "
      - "IG "
      - "III"

# Divorce papers item.
divorce-papers:
  material: PAPER
  display-name: "&aDivorce papers"

# Cross item.
cross:
  url: 1b6f0156e28c2ca6c188b2248e72fdab874abaa8d00dba72718e4f8a04e44c27
  material: PLAYER_HEAD
  display-name: "&bCross"
  lore:
    - "&7Give this cross to a villager"
    - "&7to revive him later."
  crafting:
    shaped: true
    ingredients:
      - IRON_INGOT, I
      - STRING, S
    shape:
      - "SIS"
      - "III"
      - "SIS"

change-skin:
  # %skin-id% - the skin that'll be applied.
  # %sex% - the sex of the skin.
  display-name: "&a#%skin-id% &e(%sex%)"
  lore:
    - "&7Right click on a villager to change his skin!"

# The reputation that the player will receive when giving a bad gift. Minimum value: 2; use 1 or less to disable.
bad-gift-reputation: 5

# The list of accepted items for each gift level.
# Minimum reputation value: 2; use 1 or less to disable.
#
# For a list of tags, visit https://minecraft.wiki/w/Tag#List_of_tags
# Tag format: ${tag-name}
# Tag example: $LEATHER_ARMOR_PIECES
#
# Since 1.1.2 you can specify the profession required for the gift.
# For example:
# * Let's say you want ALL villagers to give 2 reputation ('good' category) when giving an ARROW.
# * To do that, we just add ARROW in the list.
# * Now, for FLETCHER villagers, you want to give 3 reputation ('better' category).
# * To do that, simply add the condition with the following format: ?{PROFESSION}:{MATERIAL/TAG(MUST BEGIN WITH $)}
# * In this case: ?FLETCHER:ARROW
#
# This plugin offers the following extra tags:
# * LEATHER_ARMOR_PIECES,
# * IRON_ARMOR_PIECES
# * CHAINMAIL_ARMOR_PIECES
# * GOLDEN_ARMOR_PIECES
# * DIAMOND_ARMOR_PIECES
# * NETHERITE_ARMOR_PIECES
# * ARMOR_PIECES (includes all of the above)
# * WOODEN_TOOLS
# * STONE_TOOLS
# * IRON_TOOLS
# * GOLDEN_TOOLS
# * DIAMOND_TOOLS
# * NETHERITE_TOOLS
# * TOOLS (includes all of the above)
# * EDIBLES
# * RECORDS
# * POTIONS
#
# For a list of materials, visit https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/Material.html
gift:
  good:
    reputation: 2
    items:
      - GOLDEN_APPLE
      - $EDIBLES
      - $FLOWERS
      - $RECORDS
      - $LEATHER_ARMOR_PIECES
      - $CHAINMAIL_ARMOR_PIECES
      - $GOLDEN_ARMOR_PIECES
      - $WOODEN_TOOLS
      - $STONE_TOOLS
      - $GOLDEN_TOOLS
      - AMETHYST_SHARD
      - $ARROWS
      - BONE
  better:
    reputation: 3
    items:
      - $POTIONS
      - $IRON_ARMOR_PIECES
      - $IRON_TOOLS
      - SHIELD
      - ENDER_PEARL
      - BOW
      - CROSSBOW
      - ?FLETCHER:$ARROWS
      - ?FISHERMAN:FISHING_ROD
  best:
    reputation: 5
    items:
      - $BEACON_PAYMENT_ITEMS
      - $DIAMOND_ARMOR_PIECES
      - $NETHERITE_ARMOR_PIECES
      - $DIAMOND_TOOLS
      - $NETHERITE_TOOLS
      - ENCHANTED_GOLDEN_APPLE
      - TRIDENT

# Waiting time to fish again (in ticks).
fishing-cooldown: 600

# The amount of damage caused by a villager (melee attack).
attack-damage: 3.0

# The power of a ranged weapon (bow/crossbow).
# NOTE: Don't change if you don't know what you're doing.
range-weapon-power: 1.6

# Whether to use normal villagers instead of players (NOT RECOMMENDED, READ BELOW).
# NOTE: If true, keep in mind...
# * Fishermans will not be able to fish due to minecraft limitations that require a player to hold the fishing rod.
# * While it's possible for the villager to wear armor and make use of the offhand, these items will not be rendered.
# * The goal of this plugin is to make the villagers look (as much as possible) like players, but this is optional.
disable-skins: false

# Here you can choose the worlds in which villagers will appear as players and can be interacted with.
# If type is BLACKLIST, worlds listed here will be disabled.
# If type is WHITELIST, only worlds listed here will be enabled.
# NOTE: A restart is REQUIRED for changes to take effect.
worlds-filter:
  type: BLACKLIST
  worlds:
    - world_name_1
    - world_name_2
    - world_name_3

# Whether to disable player nametags.
disable-nametags: false

# The waiting time to try to tame again (in ticks). Use 0 or lower to set no limit.
tame-cooldown: 600

# Here you can choose the wanted items by the villagers.
# They'll go to pick them up if they are nearby, or they are inside a chest and villagers are allowed to loot (@loot-chest.enabled = true).
# If you want a specific material/tag to be picked only from a chest, you must place "*" at the end of the material.
# Example: IRON_INGOT*
#
# You can also specify the amount of items to be picked from the inventory when looting; if not specified, only one item is picked.
# (it must be in brackets at the end of the material/tag, but before the * (if used)).
# Example: IRON_INGOT(2)*
#
# This uses the same system as the gifts, you can add materials, tags, and profession condition; check @gift for more information.
# Be careful with the items you add here, if you die near a villager they can pick up whatever they want.
# NOTE: If you throw a wanted item to a villager they'll pick it up, but it will NOT count as a gift.
default-wanted-items:
  - BREAD
  - POTATO
  - CARROT
  - WHEAT
  - WHEAT_SEEDS
  - BEETROOT
  - BEETROOT_SEEDS
  - TORCHFLOWER_SEEDS
  - PITCHER_POD
  - MELON_SEEDS
  - PUMPKIN_SEEDS
  - ?FARMER:BONE_MEAL
  - BONE(1)*
  - COD(2)*
  - SALMON($RANDOM)*
  - IRON_INGOT(2-6)*

# Chance of jumping when attacking with a sword/axe (just to give more "realism").
# NOTE: It's recommended to leave it at 0.0 so that villagers are not attacked when jumping (or use a lower value).
melee-attack-jump-chance: 0.0

# Chance of jumping when attacking with a bow/crossbow and backing up (just to give more "realism").
# NOTE: It's recommended to leave it at 0.0 so that villagers are not attacked when jumping (or use a lower value).
back-up-jump-chance: 0.0

# Who can modify the inventory of a villager (EVERYONE/FAMILY/PARTNER/NONE).
# NOTE: Be careful with this.
# * Some players may give gifts to villagers to increase their reputation and then take the items from these villagers.
# * The higher the reputation, the greater the discounts.
# * Check the option below to prevent this.
who-can-modify-villager-inventory: NONE

# Who can modify the target entities of a villager (EVERYONE/FAMILY/PARTNER/NONE).
who-can-modify-villager-combat: FAMILY

# Who can modify the home (bed) of a villager (EVERYONE/FAMILY/PARTNER/NONE).
who-can-modify-villager-home: FAMILY

# Who can modify the name of a villager using a nametag (EVERYONE/FAMILY/PARTNER/NONE).
# NOTE: The amount of characters must be at least 3 and no colors can be used.
who-can-modify-villager-name: NONE

# Whether special prices are disabled when modifying the villager's inventory.
disable-special-prices-if-allowed-to-modify-inventory: true

# Here you can change the melee attack range.
# NOTE: Avoid setting values greater than 4.
melee-attack-range: 3.375

# Here you can choose whether villagers can ride a ship when they are near it.
disable-villager-riding-nearby-boat: false

# Here you can configure the looting of chests from villagers.
# NOTE: The items that the villager will loot from the chests are those specified above in @default-wanted-items.
loot-chest:
  # Whether this behavior is enabled.
  enabled: true
  # The required text on some line of the sign that must be placed on the chest for the villagers to loot.
  # If you want the villagers to be able to loot any chest, leave the text empty, like this: required-sign-line: "" (NOT RECOMMENDED)
  required-sign-line: "[Villager]"
  # If true, nitwit villagers will randomly order the chest after looting a chest.
  nitwit-shuffle-inventory: false
  # The time (in ticks) a villager must wait before being able to loot another chest.
  cooldown: 2400
  # The time (in millis) a villager must wait before being able to loot a specific chest.
  # Once a villager loots a chest, this chest will receive a cooldown.
  per-chest-cooldown: 3600000
  # Whether villagers can loot chests.
  allow-babies: false

# Reputation required to ask the villager to follow you.
reputation-required-to-ask-to-follow: 20

# If true, members of the villager's family may ask to be followed regardless of the required reputation in @reputation-required-to-ask-to-follow.
family-bypass-ask-to-follow: true

# Reputation required to ask the villager to stay.
reputation-required-to-ask-to-stay: 20

# If true, members of the villager's family may ask the villager to stay regardless of the required reputation in @reputation-required-to-ask-to-stay.
family-bypass-ask-to-stay: true

# The initial reputation that a villager will have with the player (must be the father) at birth.
# Minimum reputation value: 2; use 1 or less to disable.
initial-reputation-at-birth: 50

# Here you can modify the equipment a villager will receive when spawning.
# @chance: the chance of receiving the item (from 0.0 to 1.0). If not stated it'll be 1.0.
# @random-vanilla-enchantments: whether to use the vanilla enchant system (the item may (or not) be enchanted).
# @only-for-range-weapon: the item will only be added to the inventory if the villager received a ranged weapon.
# @only-for-bow: same as above, but only for bows.
# @only-for-crossbow: same as above, but only for crossbows.
# @off-hand-if-possible: the item will be added to the secondary hand if possible (only if the off-hand is not occupied).
spawn-loot:
  # If true, villagers who have spawned before will also be equipped.
  force-equip: false
  equipment:
    hand:
      '1':
        chance: 0.5
        material: BOW
        random-vanilla-enchantments: true
        damage: $RANDOM
      '2':
        chance: 0.625
        material: STONE_SWORD
        random-vanilla-enchantments: true
        damage: $RANDOM
      '3':
        chance: 0.3
        material: IRON_SWORD
        random-vanilla-enchantments: true
        damage: $RANDOM
      '4':
        chance: 0.4
        material: CROSSBOW
        damage: 45%
      '5':
        chance: 0.1
        material: TRIDENT
        damage: $RANDOM
    off-hand:
      '1':
        chance: 0.225
        material: SHIELD
      '2':
        chance: 0.1
        material: TOTEM_OF_UNDYING
    head:
      '1':
        chance: 0.45
        material: LEATHER_HELMET
        enchantments:
          - PROTECTION, 1
          - UNBREAKING, 1-2
        leather-color: $RANDOM
    chest:
      '1':
        chance: 0.4
        material: LEATHER_CHESTPLATE
        random-vanilla-enchantments: true
      '2':
        chance: 0.25
        material: IRON_CHESTPLATE
        enchantments:
          - PROTECTION, 1
      '3':
        chance: 0.01
        material: DIAMOND_CHESTPLATE
        damage: 50%
        enchantments:
          - UNBREAKING, 1-2
    legs:
      '1':
        chance: 0.4
        material: LEATHER_LEGGINGS
        damage: 25%
        random-vanilla-enchantments: true
    feet:
      '1':
        chance: 0.4
        material: LEATHER_BOOTS
        enchantments:
          - PROTECTION
  inventory-items:
    '1':
      chance: 0.4
      material: GOLDEN_APPLE
    '2':
      chance: 0.6
      material: BREAD
      amount: 4-8
    '3':
      material: ARROW
      amount: 16-48
      only-for-range-weapon: true
    '4':
      chance: 0.7
      material: TIPPED_ARROW
      amount: 8-16
      only-for-bow: true
      tipped: $RANDOM
    '5':
      chance: 0.7
      material: FIREWORK_ROCKET
      amount: 6-12
      only-for-crossbow: true
      off-hand-if-possible: true
      firework:
        power: 12-18
        firework-effects:
          '1':
            type: CREEPER
            flicker: true
            trail: true
            colors:
              - RED
              - WHITE
            fade-colors:
              - $RANDOM
    '6':
      chance: 0.3
      material: IRON_INGOT
      amount: 6-9
    '7':
      chance: 0.55
      material: BONE
      amount: 1-3
    '8':
      chance: 0.1
      material: MILK_BUCKET
      amount: 1

# Whether a villager can adopt an abandoned pet. A pet is considered abandoned when its owner (must be a villager) dies.
villager-adopts-abandoned-pet: true

# Whether the explosion of a firework launched from a villager's crossbow harms other villagers.
villager-crossbow-firework-damages-other-villagers: false

# Here you can modify automatic greetings from villagers.
greet-messages:
  # Whether this behavior is enabled.
  enabled: true
  # The distance the player must be from the villagers.
  range: 5.0
  # The waiting time (in millis) between greetings.
  cooldown: 60000
  # The waiting time (in millis) between each type of greetings the player can receive.
  # Those types are: ADULT, CHILD, CHILD_OFFSPRING, PARTNER.
  per-type-cooldown: 300000
  # The required reputation to receive a greeting from a villager.
  required-reputation: 5

# Only throw trident when the villager is in water or when exposed to rain.
riptide-only-in-water-or-rain: true

# Here you can modify the different movement speeds.
# NOTE: Swim should be the highest speed of these 4 as it's usually slower than the others.
speed-modifier:
  eat: 0.25
  walk: 0.5
  sprint: 0.75
  swim: 1.0

# Since baby villagers are smaller, they look a bit higher than adults; here you can set the offset so that they look at the same height as adults.
# NOTE 1: For some reason, it's not necessary to add an offset in 1.19.4, at least in some paper builds.
# NOTE 2: If you see that baby villagers look higher than adults, you should change this value to a negative number, -0.5 used to work fine in older versions.
# NOTE 3: This is only necessary when skins are enabled, that means, {@disable-skins = false}.
baby-look-height-offset: 0.0

# Here you can modify the schedule of the villagers and their respective activities whether they're babies or adults.
# For more information, take a look at: https://minecraft.wiki/w/Villager#Schedules
#
# NOTE: Don't touch this if you don't know what you're doing!
# Available activities: IDLE, PLAY, WORK, MEET, REST.
schedules:
  baby:
    10: IDLE
    3000: PLAY
    6000: IDLE
    10000: PLAY
    12000: REST
  default:
    10: IDLE
    2000: WORK
    9000: MEET
    11000: IDLE
    12000: REST

# Here you can configure the revival of villagers.
# NOTE: This is an experimental feature, it may be removed in the future either for good or to fix bugs.
revive:
  # Whether villagers can be revived.
  enabled: false
  # If villagers can only be revived at night.
  only-at-night: true
  # If only villagers with a cross can be revived.
  only-with-cross: true
  # Chance of an emerald block breaking when struck by lightning.
  break-emerald-chance: 0.1
  head-item:
    url: SELF
    material: PLAYER_HEAD
    display-name: "&a%villager-name%"
  spawn-values:
    # Health when spawning.
    health: 20
    # Food level when spawning.
    food-level: 20
    # Effects to apply when spawning.
    potion-effects:
      - REGENERATION, 900, 2
      - ABSORPTION, 100, 2
      - FIRE_RESISTANCE, 800, 1
  boss-bar:
    # Enable or disable the bossbar.
    enabled: true
    # %villager-name% - name of the villager.
    title: "%villager-name%"
    # If the bossbar increases or decreases (INCREASE/DECREASE).
    progress-type: INCREASE
    # Color of the bossbar.
    color: RED
    # Style of the bossbar.
    style: SOLID
    # Flags of the bossbar.
    flags:
      - CREATE_FOG
      - DARKEN_SKY